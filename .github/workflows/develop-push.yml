name: Deploy to AWS by Docker when push to develop

on:
  push:
    branches: [ "feat/#77" ]

# 권한 설정
permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest

    steps:
      # JDK 설정
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 환경 변수 설정
      - name: Set up Environment
        run: echo "${{ secrets.ENV_PROPERTIES }}" > ./.env # GitHub SecretKey 에서 설정한 내용으로 .env 파일 생성

      # 빌드
      - name: Build with Gradle
        run: ./gradlew clean bootJar
#
#      # 이미지 다중플랫폼 빌드를 위한 buildx 설치
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1

      #빌드 후 도커 허브로 push
      - name: Docker Build & Push to Hub
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build --platform linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} -f ./dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
#      - name: Docker Build & Push to Hub
#        run: |
#          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#          docker buildx create --use
#          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} -f ./dockerfile .
#          docker buildx stop
#          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

      # 환경 변수 파일 서버로 전달하기(복사 후 붙여넣기)
      - name: Send env file
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "./.env"
          target: "/home/ubuntu"

      # 도커 컴포즈 설정 파일 서버로 전달하기(복사 후 붙여넣기)
      - name: Send docker-compose.yml
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          source: "./docker-compose.yml"
          target: "/home/ubuntu"

#      # deploy.sh 파일 서버로 전달하기(복사 후 붙여넣기)
      - name: Send deploy.sh
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          source: "./deploy.sh"
          target: "/home/ubuntu"

      # 도커 컴포즈 실행하기
      # 도커 허브에서 jar파일 및 pull후에 컴포즈 up
      - name: Deploy to Dev
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            chmod 777 ./deploy.sh
            ./deploy.sh
            docker image prune -f
