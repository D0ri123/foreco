plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.sesacthon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar {
    enabled = false
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.1")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // == 스프링 부트 3.0이상에서 mysql 의존 라이브러리 ==
    implementation 'com.mysql:mysql-connector-j'

    // == 스프링 부트 3.0 이상일 때, querydsl 의존성 ==
    implementation("com.querydsl:querydsl-jpa:${dependencyManagement.importedProperties["querydsl.version"]}:jakarta")
    annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties["querydsl.version"]}:jakarta")
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    // aws parameter store
    implementation 'org.springframework.cloud:spring-cloud-starter-aws-parameter-store-config:2.2.6.RELEASE'

    //dynamoDB
    implementation 'io.github.boostchicken:spring-data-dynamodb:5.2.5'

    testImplementation ('org.springframework.boot:spring-boot-starter-test')
    testImplementation 'jakarta.persistence:jakarta.persistence-api'
    testImplementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'

}

/** clean 태스크 실행시 QClass 삭제 */
clean {
    delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성위치
}


test {
    useJUnitPlatform()
}



